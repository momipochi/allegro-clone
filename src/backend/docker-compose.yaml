services:
  jaeger:
    image: ${REGISTRY:-}jaegertracing/all-in-one:${JAEGER_VERSION:-latest}
    ports:
      - "16686:16686"
      - "4317:4317"
      - "4318:4318"
    environment:
      - LOG_LEVEL=debug
    networks:
      - kafka-network
  grafana:
    environment:
      - GF_AUTH_ANONYMOUS_ENABLED=true
      - GF_AUTH_ANONYMOUS_ORG_ROLE=Admin
    image: grafana/grafana:latest
    container_name: grafana
    ports:
      - "3000:3000"
    depends_on:
      - prometheus
    networks:
      - kafka-network
    volumes:
      - ./grafana/datasources.yaml:/etc/grafana/provisioning/datasources/datasources.yaml
      - ./grafana/dashboards/auth-service-dashboard.json:/var/lib/grafana/dashboards/auth-service-dashboard.json
      - ./grafana/dashboards.yaml:/etc/grafana/dashboards.yaml
  broker:
    image: apache/kafka:latest
    container_name: broker
    environment:
      KAFKA_NODE_ID: 1
      KAFKA_PROCESS_ROLES: broker,controller
      KAFKA_LISTENERS: PLAINTEXT://localhost:9092,CONTROLLER://localhost:9093
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://localhost:9092
      KAFKA_CONTROLLER_LISTENER_NAMES: CONTROLLER
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT
      KAFKA_CONTROLLER_QUORUM_VOTERS: 1@localhost:9093
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
      KAFKA_NUM_PARTITIONS: 3
    ports:
      - 9092:9092
    networks:
      - kafka-network

  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    volumes:
      - ./prometheus/prometheus.yaml:/etc/prometheus/prometheus.yaml
    command:
      - "--config.file=/etc/prometheus/prometheus.yaml"
    ports:
      - "9090:9090"
    networks:
      - kafka-network

  auth-service:
    build:
      context: ./auth-service/auth-service
      dockerfile: Dockerfile
    container_name: auth-service
    ports:
      - "8080:8080"
    restart: always
    networks:
      - kafka-network
    environment:
      KAFKA_BROKER: kafka:9092 # This allows ServiceA to talk to Kafka
      ASPNETCORE_URLS: http://+:8080 # Ensure ASP.NET Core listens correctly
    labels:
      - "prometheus-job=auth-service" # Label for Prometheus discovery
    volumes:
      - ./auth-service/auth-service/Keys:/app/Keys

  order-service:
    build:
      context: ./order-service
      dockerfile: Dockerfile
    container_name: order-service
    ports:
      - 8888:8888
      - 8040:8040
    restart: always
    networks:
      - kafka-network

  envoy-gateway:
    image: envoyproxy/envoy:v1.31-latest
    container_name: envoy-gateway
    ports:
      - "9901:9901" # Envoy admin interface
      - "8081:8081" # Public-facing API Gateway port
    volumes:
      - ./envoy/envoy.yaml:/etc/envoy/envoy.yaml
      - ./envoy/descriptors:/etc/envoy/descriptors
    depends_on:
      - auth-service
    networks:
      - kafka-network

networks:
  kafka-network:
    driver: bridge
